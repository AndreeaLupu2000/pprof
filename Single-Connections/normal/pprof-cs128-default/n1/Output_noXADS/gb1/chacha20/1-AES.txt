File: qperf-go
Type: cpu
Time: Nov 16, 2023 at 7:29pm (CET)
Duration: 3.30s, Total samples = 6.94s (210.11%)
Showing nodes accounting for 6.94s, 100% of 6.94s total
      flat  flat%   sum%        cum   cum%
     1.61s 23.20% 23.20%      1.61s 23.20%  runtime/internal/syscall.Syscall6
     0.72s 10.37% 33.57%      0.72s 10.37%  crypto/aes.gcmAesDec
     0.27s  3.89% 37.46%      0.27s  3.89%  runtime.memmove
     0.26s  3.75% 41.21%      0.26s  3.75%  runtime.usleep
     0.21s  3.03% 44.24%      0.21s  3.03%  runtime.futex
     0.17s  2.45% 46.69%      0.25s  3.60%  sync.(*Pool).getSlow
     0.13s  1.87% 48.56%      0.41s  5.91%  runtime.mallocgc
     0.12s  1.73% 50.29%      0.12s  1.73%  runtime.(*randomEnum).next (inline)
     0.12s  1.73% 52.02%      0.13s  1.87%  runtime.mapaccess2_fast64
     0.12s  1.73% 53.75%      0.12s  1.73%  runtime.unlock2
     0.12s  1.73% 55.48%      0.20s  2.88%  sync.(*Mutex).Unlock (partial-inline)
     0.08s  1.15% 56.63%      1.97s 28.39%  github.com/quic-go/quic-go.(*oobConn).ReadPacket
     0.06s  0.86% 57.49%      0.06s  0.86%  crypto/aes.encryptBlockAsm
     0.06s  0.86% 58.36%      0.12s  1.73%  runtime.checkTimers
     0.05s  0.72% 59.08%      0.30s  4.32%  github.com/quic-go/quic-go.(*Transport).handlePacket
     0.05s  0.72% 59.80%      0.11s  1.59%  github.com/quic-go/quic-go/internal/flowcontrol.(*streamFlowController).AddBytesRead
     0.05s  0.72% 60.52%      0.05s  0.72%  runtime.nextFreeFast (inline)
     0.04s  0.58% 61.10%      0.53s  7.64%  github.com/quic-go/quic-go.(*receiveStream).readImpl
     0.04s  0.58% 61.67%      0.08s  1.15%  golang.org/x/net/internal/socket.(*mmsghdrsPacker).pack
     0.04s  0.58% 62.25%      0.04s  0.58%  runtime.(*guintptr).cas (inline)
     0.04s  0.58% 62.82%      0.15s  2.16%  runtime.chansend
     0.04s  0.58% 63.40%      0.04s  0.58%  runtime.memclrNoHeapPointers
     0.04s  0.58% 63.98%      0.36s  5.19%  runtime.netpoll
     0.04s  0.58% 64.55%      0.04s  0.58%  runtime.read
     0.04s  0.58% 65.13%      0.56s  8.07%  runtime.stealWork
     0.04s  0.58% 65.71%      0.05s  0.72%  runtime.writeHeapBits.flush
     0.04s  0.58% 66.28%      0.04s  0.58%  sync.(*poolDequeue).popTail
     0.04s  0.58% 66.86%      0.04s  0.58%  time.Now
     0.03s  0.43% 67.29%      0.03s  0.43%  crypto/aes.gcmAesData
     0.03s  0.43% 67.72%      2.31s 33.29%  github.com/quic-go/quic-go.(*Transport).listen
     0.03s  0.43% 68.16%      2.01s 28.96%  github.com/quic-go/quic-go.(*connection).handlePacketImpl
     0.03s  0.43% 68.59%      1.91s 27.52%  github.com/quic-go/quic-go.(*connection).handleShortHeaderPacket
     0.03s  0.43% 69.02%      2.30s 33.14%  github.com/quic-go/quic-go.(*connection).run
     0.03s  0.43% 69.45%      0.17s  2.45%  github.com/quic-go/quic-go.(*receiveStream).dequeueNextFrame
     0.03s  0.43% 69.88%      0.07s  1.01%  github.com/quic-go/quic-go.(*streamsMap).GetOrOpenReceiveStream
     0.03s  0.43% 70.32%      0.03s  0.43%  github.com/quic-go/quic-go/internal/flowcontrol.(*connectionFlowController).IncrementHighestReceived
     0.03s  0.43% 70.75%      0.05s  0.72%  github.com/quic-go/quic-go/internal/handshake.(*cryptoSetup).Get1RTTOpener
     0.03s  0.43% 71.18%      0.90s 12.97%  github.com/quic-go/quic-go/internal/handshake.(*updatableAEAD).open
     0.03s  0.43% 71.61%      0.13s  1.87%  golang.org/x/net/internal/socket.parseInetAddr
     0.03s  0.43% 72.05%      0.03s  0.43%  qperf-go/common.(*State).AddReceivedPackets
     0.03s  0.43% 72.48%      0.11s  1.59%  runtime.chanrecv
     0.03s  0.43% 72.91%      1.19s 17.15%  runtime.findRunnable
     0.03s  0.43% 73.34%      0.11s  1.59%  runtime.heapBitsSetType
     0.03s  0.43% 73.78%      0.07s  1.01%  runtime.lock2
     0.03s  0.43% 74.21%      0.03s  0.43%  runtime.mapaccess2
     0.03s  0.43% 74.64%      0.03s  0.43%  runtime.pMask.read (inline)
     0.03s  0.43% 75.07%      0.03s  0.43%  runtime.procyield
     0.03s  0.43% 75.50%      0.08s  1.15%  runtime.scanobject
     0.03s  0.43% 75.94%      0.08s  1.15%  runtime.selectgo
     0.03s  0.43% 76.37%      0.03s  0.43%  sync.(*poolDequeue).pushHead
     0.02s  0.29% 76.66%      0.02s  0.29%  bytes.(*Reader).ReadByte
     0.02s  0.29% 76.95%      0.85s 12.25%  crypto/aes.(*gcmAsm).Open
     0.02s  0.29% 77.23%      0.02s  0.29%  crypto/subtle.ConstantTimeCompare (inline)
     0.02s  0.29% 77.52%      0.07s  1.01%  github.com/quic-go/quic-go.(*packetHandlerMap).Get
     0.02s  0.29% 77.81%      0.02s  0.29%  github.com/quic-go/quic-go.(*packetPacker).composeNextPacket
     0.02s  0.29% 78.10%      1.03s 14.84%  github.com/quic-go/quic-go.(*packetUnpacker).UnpackShortHeader
     0.02s  0.29% 78.39%      0.20s  2.88%  github.com/quic-go/quic-go.(*receiveStream).handleStreamFrameImpl
     0.02s  0.29% 78.67%      0.02s  0.29%  github.com/quic-go/quic-go/internal/ackhandler.(*receivedPacketHandler).IsPotentiallyDuplicate
     0.02s  0.29% 78.96%      0.02s  0.29%  github.com/quic-go/quic-go/internal/ackhandler.(*receivedPacketHistory).addToRanges
     0.02s  0.29% 79.25%      0.04s  0.58%  github.com/quic-go/quic-go/internal/ackhandler.(*receivedPacketTracker).ReceivedPacket
     0.02s  0.29% 79.54%      0.03s  0.43%  github.com/quic-go/quic-go/internal/flowcontrol.(*connectionFlowController).AddBytesRead
     0.02s  0.29% 79.83%      0.87s 12.54%  github.com/quic-go/quic-go/internal/handshake.(*xorNonceAEAD).Open
     0.02s  0.29% 80.12%      0.02s  0.29%  github.com/quic-go/quic-go/internal/wire.IsPotentialQUICPacket (inline)
     0.02s  0.29% 80.40%      1.54s 22.19%  golang.org/x/net/internal/socket.(*Conn).recvMsgs
     0.02s  0.29% 80.69%      0.02s  0.29%  golang.org/x/net/internal/socket.(*mmsghdrsPacker).prepare
     0.02s  0.29% 80.98%      0.02s  0.29%  golang.org/x/net/internal/socket.(*msghdr).pack
     0.02s  0.29% 81.27%      0.02s  0.29%  golang.org/x/sys/unix.socketControlMessageHeaderAndData (inline)
     0.02s  0.29% 81.56%      0.15s  2.16%  internal/poll.(*FD).WriteMsg
     0.02s  0.29% 81.84%      0.02s  0.29%  net/netip.beUint64 (inline)
     0.02s  0.29% 82.13%      0.02s  0.29%  runtime.(*mspan).init
     0.02s  0.29% 82.42%      0.04s  0.58%  runtime.(*sweepLocked).sweep
     0.02s  0.29% 82.71%      0.02s  0.29%  runtime.casgstatus
     0.02s  0.29% 83.00%      0.02s  0.29%  runtime.duffcopy
     0.02s  0.29% 83.29%      0.02s  0.29%  runtime.findObject
     0.02s  0.29% 83.57%      0.02s  0.29%  runtime.getMCache (inline)
     0.02s  0.29% 83.86%      0.02s  0.29%  runtime.getempty
     0.02s  0.29% 84.15%      0.02s  0.29%  runtime.getitab
     0.02s  0.29% 84.44%      0.02s  0.29%  runtime.greyobject
     0.02s  0.29% 84.73%      0.02s  0.29%  runtime.madvise
     0.02s  0.29% 85.01%      0.02s  0.29%  runtime.memhash64
     0.02s  0.29% 85.30%      0.02s  0.29%  runtime.nanotime (inline)
     0.02s  0.29% 85.59%      0.02s  0.29%  runtime.readUintptr (inline)
     0.02s  0.29% 85.88%      0.02s  0.29%  runtime.updateTimerPMask
     0.02s  0.29% 86.17%      0.02s  0.29%  runtime/internal/atomic.(*Bool).Load (inline)
     0.02s  0.29% 86.46%      0.02s  0.29%  runtime/internal/atomic.(*Int64).Load (inline)
     0.02s  0.29% 86.74%      0.07s  1.01%  sync.(*poolChain).popTail
     0.02s  0.29% 87.03%      0.02s  0.29%  sync.(*poolDequeue).popHead
     0.02s  0.29% 87.32%      0.02s  0.29%  sync/atomic.(*Int32).Add (inline)
     0.01s  0.14% 87.46%      0.01s  0.14%  crypto/aes.gcmAesEnc
     0.01s  0.14% 87.61%      0.01s  0.14%  crypto/aes.gcmAesFinish
     0.01s  0.14% 87.75%      0.01s  0.14%  crypto/internal/alias.InexactOverlap (inline)
     0.01s  0.14% 87.90%      0.04s  0.58%  github.com/quic-go/quic-go.(*Transport).maybeHandleStatelessReset
     0.01s  0.14% 88.04%      0.38s  5.48%  github.com/quic-go/quic-go.(*connection).handleFrame
     0.01s  0.14% 88.18%      0.35s  5.04%  github.com/quic-go/quic-go.(*connection).handleStreamFrame
     0.01s  0.14% 88.33%      0.83s 11.96%  github.com/quic-go/quic-go.(*connection).handleUnpackedShortHeaderPacket
     0.01s  0.14% 88.47%      0.11s  1.59%  github.com/quic-go/quic-go.(*frameSorter).Pop (inline)
     0.01s  0.14% 88.62%      0.01s  0.14%  github.com/quic-go/quic-go.(*frameSorter).findEndGap
     0.01s  0.14% 88.76%      0.17s  2.45%  github.com/quic-go/quic-go.(*oobConn).WritePacket
     0.01s  0.14% 88.90%      0.03s  0.43%  github.com/quic-go/quic-go.(*outgoingStreamsMap[...]).GetStream
     0.01s  0.14% 89.05%      0.03s  0.43%  github.com/quic-go/quic-go.(*packetHandlerMap).GetByResetToken
     0.01s  0.14% 89.19%      0.07s  1.01%  github.com/quic-go/quic-go.(*packetPacker).appendPacket
     0.01s  0.14% 89.34%      0.04s  0.58%  github.com/quic-go/quic-go.(*packetPacker).appendShortHeaderPacket
     0.01s  0.14% 89.48%      0.96s 13.83%  github.com/quic-go/quic-go.(*packetUnpacker).unpackShortHeaderPacket
     0.01s  0.14% 89.63%      0.27s  3.89%  github.com/quic-go/quic-go.(*receiveStream).handleStreamFrame
     0.01s  0.14% 89.77%      0.01s  0.14%  github.com/quic-go/quic-go.(*receivedPacket).Size (inline)
     0.01s  0.14% 89.91%      0.01s  0.14%  github.com/quic-go/quic-go.(*sconn).capabilities
     0.01s  0.14% 90.06%      0.04s  0.58%  github.com/quic-go/quic-go.(*streamsMap).getOrOpenReceiveStream
     0.01s  0.14% 90.20%      0.01s  0.14%  github.com/quic-go/quic-go.getLargePacketBuffer (inline)
     0.01s  0.14% 90.35%      0.26s  3.75%  github.com/quic-go/quic-go.getPacketBuffer (inline)
     0.01s  0.14% 90.49%      0.02s  0.29%  github.com/quic-go/quic-go/internal/ackhandler.(*sentPacketHandler).ReceivedAck
     0.01s  0.14% 90.63%      0.01s  0.14%  github.com/quic-go/quic-go/internal/ackhandler.(*sentPacketHandler).detectAndRemoveAckedPackets.func1
     0.01s  0.14% 90.78%      0.01s  0.14%  github.com/quic-go/quic-go/internal/flowcontrol.(*baseFlowController).hasWindowUpdate (inline)
     0.01s  0.14% 90.92%      0.03s  0.43%  github.com/quic-go/quic-go/internal/handshake.(*aesHeaderProtector).apply
     0.01s  0.14% 91.07%      0.11s  1.59%  github.com/quic-go/quic-go/internal/logutils.ConvertFrame
     0.01s  0.14% 91.21%      0.02s  0.29%  github.com/quic-go/quic-go/internal/utils.(*Timer).Reset
     0.01s  0.14% 91.35%      0.01s  0.14%  github.com/quic-go/quic-go/internal/wire.IsLongHeaderPacket (inline)
     0.01s  0.14% 91.50%      0.02s  0.29%  github.com/quic-go/quic-go/internal/wire.IsVersionNegotiationPacket (inline)
     0.01s  0.14% 91.64%      0.01s  0.14%  github.com/quic-go/quic-go/internal/wire.ParseShortHeader
     0.01s  0.14% 91.79%      0.03s  0.43%  github.com/quic-go/quic-go/internal/wire.putStreamFrame (inline)
     0.01s  0.14% 91.93%      0.01s  0.14%  github.com/quic-go/quic-go/quicvarint.Append
     0.01s  0.14% 92.07%      0.03s  0.43%  github.com/quic-go/quic-go/quicvarint.Read
     0.01s  0.14% 92.22%      0.01s  0.14%  golang.org/x/net/internal/socket.(*mmsgTmpsPool).Get
     0.01s  0.14% 92.36%      1.28s 18.44%  golang.org/x/net/internal/socket.(*syscaller).recvmmsg
     0.01s  0.14% 92.51%      0.14s  2.02%  golang.org/x/net/internal/socket.mmsghdrs.unpack
     0.01s  0.14% 92.65%      0.03s  0.43%  golang.org/x/sys/unix.ParseOneSocketControlMessage
     0.01s  0.14% 92.80%      1.26s 18.16%  internal/poll.(*FD).RawRead
     0.01s  0.14% 92.94%      0.01s  0.14%  internal/poll.(*FD).readUnlock
     0.01s  0.14% 93.08%      0.01s  0.14%  internal/poll.(*pollDesc).wait
     0.01s  0.14% 93.23%      0.05s  0.72%  io.ReadAtLeast
     0.01s  0.14% 93.37%      0.64s  9.22%  io.copyBuffer
     0.01s  0.14% 93.52%      1.27s 18.30%  net.(*rawConn).Read
     0.01s  0.14% 93.66%      0.01s  0.14%  qperf-go/common/qlog_quic.(*connectionTracer).ReceivedShortHeaderPacket
     0.01s  0.14% 93.80%      0.01s  0.14%  qperf-go/perf/perf_client.(*responseReceiveStream).run.func1
     0.01s  0.14% 93.95%      0.01s  0.14%  runtime.(*guintptr).set (inline)
     0.01s  0.14% 94.09%      0.01s  0.14%  runtime.(*pallocBits).summarize
     0.01s  0.14% 94.24%      0.01s  0.14%  runtime.(*semaRoot).dequeue
     0.01s  0.14% 94.38%      0.01s  0.14%  runtime.(*spanSet).push
     0.01s  0.14% 94.52%      0.01s  0.14%  runtime.acquireSudog
     0.01s  0.14% 94.67%      0.01s  0.14%  runtime.arenaIndex (inline)
     0.01s  0.14% 94.81%      0.01s  0.14%  runtime.bulkBarrierPreWrite
     0.01s  0.14% 94.96%      0.01s  0.14%  runtime.chanbuf (inline)
     0.01s  0.14% 95.10%      0.01s  0.14%  runtime.divRoundUp (inline)
     0.01s  0.14% 95.24%      0.01s  0.14%  runtime.dodeltimer0
     0.01s  0.14% 95.39%      0.01s  0.14%  runtime.duffzero
     0.01s  0.14% 95.53%      0.01s  0.14%  runtime.empty (inline)
     0.01s  0.14% 95.68%      0.01s  0.14%  runtime.gogo
     0.01s  0.14% 95.82%      0.01s  0.14%  runtime.gopark
     0.01s  0.14% 95.97%      0.01s  0.14%  runtime.heapBitsForAddr
     0.01s  0.14% 96.11%      0.01s  0.14%  runtime.ifaceeq
     0.01s  0.14% 96.25%      0.08s  1.15%  runtime.lock (inline)
     0.01s  0.14% 96.40%      0.12s  1.73%  runtime.makeslice
     0.01s  0.14% 96.54%      0.01s  0.14%  runtime.mget (inline)
     0.01s  0.14% 96.69%      0.29s  4.18%  runtime.newobject
     0.01s  0.14% 96.83%      1.26s 18.16%  runtime.park_m
     0.01s  0.14% 96.97%      0.02s  0.29%  runtime.pidleget
     0.01s  0.14% 97.12%      0.03s  0.43%  runtime.pidleput
     0.01s  0.14% 97.26%      0.01s  0.14%  runtime.pollInfo.closing (inline)
     0.01s  0.14% 97.41%      0.29s  4.18%  runtime.runqgrab
     0.01s  0.14% 97.55%      0.02s  0.29%  runtime.scanblock
     0.01s  0.14% 97.69%      0.02s  0.29%  runtime.sellock
     0.01s  0.14% 97.84%      0.01s  0.14%  runtime.spanOfUnchecked (inline)
     0.01s  0.14% 97.98%      0.01s  0.14%  runtime.tgkill
     0.01s  0.14% 98.13%      0.13s  1.87%  runtime.unlockWithRank (inline)
     0.01s  0.14% 98.27%      0.13s  1.87%  runtime.wakep
     0.01s  0.14% 98.41%      0.01s  0.14%  runtime.writeHeapBits.write
     0.01s  0.14% 98.56%      0.01s  0.14%  runtime/internal/atomic.(*Int32).Load (inline)
     0.01s  0.14% 98.70%      0.30s  4.32%  sync.(*Pool).Get
     0.01s  0.14% 98.85%      0.02s  0.29%  sync.(*Pool).pin
     0.01s  0.14% 98.99%      0.03s  0.43%  sync.(*poolChain).popHead
     0.01s  0.14% 99.14%      0.05s  0.72%  sync.(*poolChain).pushHead
     0.01s  0.14% 99.28%      0.01s  0.14%  sync.indexLocal (inline)
     0.01s  0.14% 99.42%      0.01s  0.14%  sync.loadPoolChainElt (inline)
     0.01s  0.14% 99.57%      0.01s  0.14%  sync.runtime_procPin
     0.01s  0.14% 99.71%      0.01s  0.14%  sync/atomic.StorePointer
     0.01s  0.14% 99.86%      0.01s  0.14%  time.(*Timer).Stop (inline)
     0.01s  0.14%   100%      0.01s  0.14%  time.now
         0     0%   100%      0.04s  0.58%  bytes.(*Reader).Read
         0     0%   100%      0.02s  0.29%  crypto/aes.(*aesCipherAsm).Encrypt
         0     0%   100%      0.01s  0.14%  crypto/aes.(*gcmAsm).Seal
         0     0%   100%      2.30s 33.14%  github.com/quic-go/quic-go.(*client).dial.func1
         0     0%   100%      0.07s  1.01%  github.com/quic-go/quic-go.(*connection).appendPacket
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go.(*connection).handleAckFrame
         0     0%   100%      0.78s 11.24%  github.com/quic-go/quic-go.(*connection).handleFrames
         0     0%   100%      0.12s  1.73%  github.com/quic-go/quic-go.(*connection).handlePacket
         0     0%   100%      0.06s  0.86%  github.com/quic-go/quic-go.(*connection).handleShortHeaderPacket.func2
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go.(*connection).maybeResetTimer
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go.(*connection).onHasStreamWindowUpdate
         0     0%   100%      0.21s  3.03%  github.com/quic-go/quic-go.(*connection).run.func2
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go.(*connection).scheduleSending (inline)
         0     0%   100%      0.11s  1.59%  github.com/quic-go/quic-go.(*connection).sendPackets
         0     0%   100%      0.10s  1.44%  github.com/quic-go/quic-go.(*connection).sendPacketsWithGSO
         0     0%   100%      0.11s  1.59%  github.com/quic-go/quic-go.(*connection).triggerSending
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go.(*connectionTimer).SetTimer
         0     0%   100%      0.06s  0.86%  github.com/quic-go/quic-go.(*frameSorter).Push
         0     0%   100%      0.06s  0.86%  github.com/quic-go/quic-go.(*frameSorter).push
         0     0%   100%      0.03s  0.43%  github.com/quic-go/quic-go.(*packetBuffer).MaybeRelease (inline)
         0     0%   100%      0.03s  0.43%  github.com/quic-go/quic-go.(*packetBuffer).putBack
         0     0%   100%      0.07s  1.01%  github.com/quic-go/quic-go.(*packetPacker).AppendPacket
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go.(*packetPacker).appendPacketPayload
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go.(*packetPacker).encryptPacket
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go.(*packetPacker).maybeGetAppDataPacket
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go.(*packetPacker).maybeGetShortHeaderPacket
         0     0%   100%      0.03s  0.43%  github.com/quic-go/quic-go.(*packetUnpacker).unpackShortHeader
         0     0%   100%      0.62s  8.93%  github.com/quic-go/quic-go.(*receiveStream).Read
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go.(*receiveStream).signalRead (inline)
         0     0%   100%      0.17s  2.45%  github.com/quic-go/quic-go.(*sconn).Write
         0     0%   100%      0.21s  3.03%  github.com/quic-go/quic-go.(*sendQueue).Run
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go.(*sendQueue).Send
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go.(*windowUpdateQueue).AddStream
         0     0%   100%      0.04s  0.58%  github.com/quic-go/quic-go/internal/ackhandler.(*receivedPacketHandler).ReceivedPacket
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go/internal/ackhandler.(*receivedPacketHistory).ReceivedPacket
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go/internal/ackhandler.(*sentPacketHandler).detectAndRemoveAckedPackets
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go/internal/ackhandler.(*sentPacketHistory).Iterate
         0     0%   100%      0.03s  0.43%  github.com/quic-go/quic-go/internal/flowcontrol.(*streamFlowController).UpdateHighestReceived
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go/internal/flowcontrol.NewStreamFlowController.func1
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go/internal/handshake.(*aesHeaderProtector).DecryptHeader
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go/internal/handshake.(*aesHeaderProtector).EncryptHeader
         0     0%   100%      0.02s  0.29%  github.com/quic-go/quic-go/internal/handshake.(*updatableAEAD).DecryptHeader
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go/internal/handshake.(*updatableAEAD).EncryptHeader
         0     0%   100%      0.90s 12.97%  github.com/quic-go/quic-go/internal/handshake.(*updatableAEAD).Open
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go/internal/handshake.(*updatableAEAD).Seal
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go/internal/handshake.(*xorNonceAEAD).Seal
         0     0%   100%      0.01s  0.14%  github.com/quic-go/quic-go/internal/wire.(*AckFrame).Append
         0     0%   100%      0.03s  0.43%  github.com/quic-go/quic-go/internal/wire.(*StreamFrame).PutBack
         0     0%   100%      0.13s  1.87%  github.com/quic-go/quic-go/internal/wire.(*frameParser).ParseNext
         0     0%   100%      0.13s  1.87%  github.com/quic-go/quic-go/internal/wire.(*frameParser).parseFrame
         0     0%   100%      0.13s  1.87%  github.com/quic-go/quic-go/internal/wire.(*frameParser).parseNext
         0     0%   100%      0.05s  0.72%  github.com/quic-go/quic-go/internal/wire.GetStreamFrame (inline)
         0     0%   100%      0.13s  1.87%  github.com/quic-go/quic-go/internal/wire.parseStreamFrame
         0     0%   100%      0.04s  0.58%  github.com/quic-go/quic-go/logging.(*connTracerMultiplexer).ReceivedShortHeaderPacket
         0     0%   100%      1.54s 22.19%  golang.org/x/net/internal/socket.(*Conn).RecvMsgs (inline)
         0     0%   100%      0.01s  0.14%  golang.org/x/net/internal/socket.(*mmsgTmpsPool).Put
         0     0%   100%      1.23s 17.72%  golang.org/x/net/internal/socket.(*syscaller).recvmmsgF
         0     0%   100%      0.01s  0.14%  golang.org/x/net/internal/socket.ioComplete (inline)
         0     0%   100%      1.22s 17.58%  golang.org/x/net/internal/socket.recvmmsg
         0     0%   100%      1.54s 22.19%  golang.org/x/net/ipv4.(*payloadHandler).ReadBatch
         0     0%   100%      0.01s  0.14%  internal/poll.(*pollDesc).prepare
         0     0%   100%      0.01s  0.14%  internal/poll.(*pollDesc).prepareWrite (inline)
         0     0%   100%      0.01s  0.14%  internal/poll.(*pollDesc).waitRead (inline)
         0     0%   100%      0.01s  0.14%  internal/poll.runtime_pollReset
         0     0%   100%      0.64s  9.22%  io.CopyBuffer
         0     0%   100%      0.05s  0.72%  io.ReadFull (inline)
         0     0%   100%      0.01s  0.14%  net.(*UDPAddr).sockaddr
         0     0%   100%      0.16s  2.31%  net.(*UDPConn).WriteMsgUDP
         0     0%   100%      0.16s  2.31%  net.(*UDPConn).writeMsg
         0     0%   100%      0.15s  2.16%  net.(*netFD).writeMsg
         0     0%   100%      0.01s  0.14%  net.ipToSockaddr
         0     0%   100%      0.02s  0.29%  net/netip.AddrFrom16
         0     0%   100%      0.03s  0.43%  qperf-go/common.StateConnectionTracer.ReceivedShortHeaderPacket
         0     0%   100%      0.01s  0.14%  qperf-go/common/utils.funcToWriterStruct.Write
         0     0%   100%      0.64s  9.22%  qperf-go/perf/perf_client.(*responseReceiveStream).run
         0     0%   100%      0.64s  9.22%  qperf-go/perf/perf_client.newResponseReceiveStream.func1
         0     0%   100%      0.01s  0.14%  runtime.(*gcControllerState).enlistWorker
         0     0%   100%      0.02s  0.29%  runtime.(*gcWork).balance
         0     0%   100%      0.03s  0.43%  runtime.(*mcache).nextFree
         0     0%   100%      0.02s  0.29%  runtime.(*mcache).prepareForSweep
         0     0%   100%      0.03s  0.43%  runtime.(*mcache).refill
         0     0%   100%      0.02s  0.29%  runtime.(*mcache).releaseAll
         0     0%   100%      0.02s  0.29%  runtime.(*mcentral).cacheSpan
         0     0%   100%      0.02s  0.29%  runtime.(*mcentral).grow
         0     0%   100%      0.03s  0.43%  runtime.(*mcentral).uncacheSpan
         0     0%   100%      0.02s  0.29%  runtime.(*mheap).alloc
         0     0%   100%      0.02s  0.29%  runtime.(*mheap).alloc.func1
         0     0%   100%      0.02s  0.29%  runtime.(*mheap).allocSpan
         0     0%   100%      0.02s  0.29%  runtime.(*mheap).freeSpan
         0     0%   100%      0.02s  0.29%  runtime.(*mheap).freeSpan.func1
         0     0%   100%      0.01s  0.14%  runtime.(*mheap).freeSpanLocked
         0     0%   100%      0.02s  0.29%  runtime.(*mheap).initSpan
         0     0%   100%      0.01s  0.14%  runtime.(*pageAlloc).free
         0     0%   100%      0.02s  0.29%  runtime.(*pageAlloc).scavenge
         0     0%   100%      0.02s  0.29%  runtime.(*pageAlloc).scavenge.func1
         0     0%   100%      0.02s  0.29%  runtime.(*pageAlloc).scavengeOne
         0     0%   100%      0.01s  0.14%  runtime.(*pageAlloc).update
         0     0%   100%      0.02s  0.29%  runtime.(*scavengerState).init.func2
         0     0%   100%      0.02s  0.29%  runtime.(*scavengerState).run
         0     0%   100%      0.01s  0.14%  runtime.(*stackScanState).addObject
         0     0%   100%      0.02s  0.29%  runtime.adjusttimers
         0     0%   100%      0.02s  0.29%  runtime.bgscavenge
         0     0%   100%      0.02s  0.29%  runtime.bgsweep
         0     0%   100%      0.01s  0.14%  runtime.chanrecv1
         0     0%   100%      0.01s  0.14%  runtime.checkRunqsNoP
         0     0%   100%      0.02s  0.29%  runtime.convI2I
         0     0%   100%      0.02s  0.29%  runtime.deductAssistCredit
         0     0%   100%      0.01s  0.14%  runtime.dropg (inline)
         0     0%   100%      0.01s  0.14%  runtime.execute
         0     0%   100%      0.01s  0.14%  runtime.exitsyscall
         0     0%   100%      0.01s  0.14%  runtime.forEachP
         0     0%   100%      0.11s  1.59%  runtime.futexsleep
         0     0%   100%      0.10s  1.44%  runtime.futexwakeup
         0     0%   100%      0.02s  0.29%  runtime.gcAssistAlloc
         0     0%   100%      0.02s  0.29%  runtime.gcAssistAlloc.func1
         0     0%   100%      0.02s  0.29%  runtime.gcAssistAlloc1
         0     0%   100%      0.13s  1.87%  runtime.gcBgMarkWorker
         0     0%   100%      0.11s  1.59%  runtime.gcBgMarkWorker.func2
         0     0%   100%      0.11s  1.59%  runtime.gcDrain
         0     0%   100%      0.02s  0.29%  runtime.gcDrainN
         0     0%   100%      0.02s  0.29%  runtime.gcMarkDone
         0     0%   100%      0.02s  0.29%  runtime.gcMarkTermination
         0     0%   100%      0.01s  0.14%  runtime.gcMarkTermination.func3
         0     0%   100%      0.01s  0.14%  runtime.gcMarkTermination.func4
         0     0%   100%      0.01s  0.14%  runtime.gcMarkTermination.func4.1
         0     0%   100%      0.01s  0.14%  runtime.gentraceback
         0     0%   100%      0.01s  0.14%  runtime.goparkunlock (inline)
         0     0%   100%      0.04s  0.58%  runtime.gopreempt_m
         0     0%   100%      0.09s  1.30%  runtime.goready
         0     0%   100%      0.09s  1.30%  runtime.goready.func1
         0     0%   100%      0.04s  0.58%  runtime.goschedImpl
         0     0%   100%      0.02s  0.29%  runtime.growslice
         0     0%   100%      0.01s  0.14%  runtime.handoff
         0     0%   100%      0.07s  1.01%  runtime.lockWithRank (inline)
         0     0%   100%      0.09s  1.30%  runtime.mPark (inline)
         0     0%   100%      0.02s  0.29%  runtime.mapdelete_fast64
         0     0%   100%      0.03s  0.43%  runtime.markroot
         0     0%   100%      0.01s  0.14%  runtime.markroot.func1
         0     0%   100%      0.02s  0.29%  runtime.markrootBlock
         0     0%   100%      1.26s 18.16%  runtime.mcall
         0     0%   100%      0.01s  0.14%  runtime.memclrHasPointers
         0     0%   100%      0.04s  0.58%  runtime.morestack
         0     0%   100%      0.01s  0.14%  runtime.netpollcheckerr (inline)
         0     0%   100%      0.04s  0.58%  runtime.newstack
         0     0%   100%      0.09s  1.30%  runtime.notesleep
         0     0%   100%      0.10s  1.44%  runtime.notewakeup
         0     0%   100%      0.02s  0.29%  runtime.pidlegetSpinning
         0     0%   100%      0.01s  0.14%  runtime.preemptM (inline)
         0     0%   100%      0.01s  0.14%  runtime.preemptone
         0     0%   100%      0.01s  0.14%  runtime.procresize
         0     0%   100%      0.09s  1.30%  runtime.ready
         0     0%   100%      0.07s  1.01%  runtime.readyWithTime
         0     0%   100%      0.06s  0.86%  runtime.resetspinning
         0     0%   100%      0.02s  0.29%  runtime.runOneTimer
         0     0%   100%      0.02s  0.29%  runtime.runqput
         0     0%   100%      0.29s  4.18%  runtime.runqsteal
         0     0%   100%      0.02s  0.29%  runtime.runtimer
         0     0%   100%      0.01s  0.14%  runtime.scanframeworker
         0     0%   100%      0.01s  0.14%  runtime.scanstack
         0     0%   100%      0.01s  0.14%  runtime.scanstack.func1
         0     0%   100%      1.26s 18.16%  runtime.schedule
         0     0%   100%      0.10s  1.44%  runtime.selectnbrecv
         0     0%   100%      0.15s  2.16%  runtime.selectnbsend
         0     0%   100%      0.01s  0.14%  runtime.selunlock
         0     0%   100%      0.02s  0.29%  runtime.semacquire1
         0     0%   100%      0.08s  1.15%  runtime.semrelease1
         0     0%   100%      0.02s  0.29%  runtime.send
         0     0%   100%      0.01s  0.14%  runtime.setGNoWB (inline)
         0     0%   100%      0.01s  0.14%  runtime.signalM
         0     0%   100%      0.01s  0.14%  runtime.startTheWorldWithSema
         0     0%   100%      0.11s  1.59%  runtime.startm
         0     0%   100%      0.10s  1.44%  runtime.stopm
         0     0%   100%      0.02s  0.29%  runtime.sweepone
         0     0%   100%      0.02s  0.29%  runtime.sysUnused
         0     0%   100%      0.02s  0.29%  runtime.sysUnusedOS
         0     0%   100%      0.29s  4.18%  runtime.systemstack
         0     0%   100%      0.03s  0.43%  runtime.typedmemmove
         0     0%   100%      0.13s  1.87%  runtime.unlock (inline)
         0     0%   100%      0.28s  4.03%  runtime/internal/syscall.EpollWait
         0     0%   100%      0.03s  0.43%  sync.(*Mutex).Lock (inline)
         0     0%   100%      0.03s  0.43%  sync.(*Mutex).lockSlow
         0     0%   100%      0.08s  1.15%  sync.(*Mutex).unlockSlow
         0     0%   100%      0.06s  0.86%  sync.(*Pool).Put
         0     0%   100%      0.02s  0.29%  sync.(*RWMutex).RLock (inline)
         0     0%   100%      0.02s  0.29%  sync.runtime_SemacquireMutex
         0     0%   100%      0.08s  1.15%  sync.runtime_Semrelease
         0     0%   100%      0.01s  0.14%  sync.runtime_doSpin
         0     0%   100%      0.01s  0.14%  sync.storePoolChainElt (inline)
         0     0%   100%      1.33s 19.16%  syscall.RawSyscall6
         0     0%   100%      0.12s  1.73%  syscall.SendmsgN
         0     0%   100%      0.12s  1.73%  syscall.Syscall
         0     0%   100%      1.22s 17.58%  syscall.Syscall6
         0     0%   100%      0.12s  1.73%  syscall.sendmsg
         0     0%   100%      0.12s  1.73%  syscall.sendmsgN
         0     0%   100%      0.01s  0.14%  time.sendTime
